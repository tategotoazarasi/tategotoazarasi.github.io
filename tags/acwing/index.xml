<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>acwing on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/acwing/</link><description>Recent content in acwing on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 15 Jan 2022 20:42:10 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/acwing/index.xml" rel="self" type="application/rss+xml"/><item><title>AcWing 4211. 序列重排</title><link>https://tategotoazarasi.github.io/post/acwing4211/</link><pubDate>Sat, 15 Jan 2022 20:42:10 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4211/</guid><description>&lt;p>给定一个长度为 n 的整数序列 \(a_1,a_2,…,a_n\)。&lt;/p>
&lt;p>请你对序列进行重新排序（也可以保持原序列），要求新序列满足每个元素（第 1 个除外）都恰好是前一个元素的两倍或前一个元素的三分之一。&lt;/p>
&lt;p>保证输入一定有解。&lt;/p></description></item><item><title>AcWing 1978. 奶牛过马路</title><link>https://tategotoazarasi.github.io/post/acwing1978/</link><pubDate>Tue, 11 Jan 2022 16:08:30 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1978/</guid><description>&lt;p>每天，农夫约翰的 N 头奶牛都会穿过农场中间的马路。&lt;/p>
&lt;p>考虑约翰的农场在二维平面的地图，马路沿水平方向延伸，马路的一侧由直线 y=0 描述，另一侧由直线 y=1 描述。&lt;/p>
&lt;p>奶牛 i 从马路一侧的位置 \((a_i,0)\) 沿直线过马路到达另一侧的位置 \((b_i,1)\)。&lt;/p>
&lt;p>所有 \(a_i\) 互不相同，所有 \(b_i\) 互不相同。&lt;/p>
&lt;p>尽管他的奶牛们行动敏捷，他还是担心行动路径交叉的两头奶牛在过马路时发生碰撞。&lt;/p>
&lt;p>约翰认为，如果一头奶牛的行动路径没有跟其他任何奶牛的行动路径相交，则该奶牛是安全的。&lt;/p>
&lt;p>请帮助约翰计算安全奶牛的数量。&lt;/p></description></item><item><title>AcWing 1996. 打乱字母</title><link>https://tategotoazarasi.github.io/post/acwing1996/</link><pubDate>Sun, 09 Jan 2022 18:39:18 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1996/</guid><description>&lt;p>农夫约翰将按字典序排列的 N 头奶牛的名字列表贴在了牛棚的门上。&lt;/p>
&lt;p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。&lt;/p>
&lt;p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。&lt;/p>
&lt;p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。&lt;/p>
&lt;p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。&lt;/p></description></item><item><title>AcWing 2014. 岛</title><link>https://tategotoazarasi.github.io/post/acwing2014/</link><pubDate>Thu, 06 Jan 2022 10:51:11 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2014/</guid><description>&lt;p>每当下雨时，农夫约翰的田地总是被洪水淹没。&lt;/p>
&lt;p>由于田地不是完全水平的，所以一些地方充满水后，留下了许多被水隔开的“岛”。&lt;/p>
&lt;p>约翰的田地被描述为由 N 个连续高度值 H1,…,HN 指定的一维场景。&lt;/p>
&lt;p>假设该场景被无限高的围墙包围着，请考虑暴雨期间发生的情况：&lt;/p>
&lt;p>最低处首先被水覆盖，形成一些不连贯的岛，随着水位的不断上升，这些岛最终都会被覆盖。&lt;/p>
&lt;p>一旦水位等于一块田地的高度，那块田地就被认为位于水下。&lt;/p>
&lt;p>&lt;img src="https://tategotoazarasi.github.io/images/19_8c986a0cb5-fig_islands.png" alt="fig_islands.png">&lt;/p>
&lt;p>上图显示了一个示例：在左图中，我们只加入了刚好超过 1 单位的水，此时剩下 4 个岛（最大岛屿剩余数量），而在右图中，我们共加入了 7 单位的水，此时仅剩下 2 个岛。&lt;/p>
&lt;p>请计算，暴风雨期间我们能在某个时间点看到的最大岛屿数量。&lt;/p>
&lt;p>水会一直上升到所有田地都在水下。&lt;/p></description></item><item><title>AcWing 2019. 拖拉机</title><link>https://tategotoazarasi.github.io/post/acwing2019/</link><pubDate>Wed, 05 Jan 2022 10:59:26 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2019/</guid><description>&lt;p>干了一整天的活，农夫约翰完全忘记了他把拖拉机落在田地中央了。&lt;/p>
&lt;p>他的奶牛非常调皮，决定对约翰来场恶作剧。&lt;/p>
&lt;p>她们在田地的不同地方放了 N 捆干草，这样一来，约翰想要开走拖拉机就必须先移除一些干草捆。拖拉机的位置以及 N 捆干草的位置都是二维平面上的整数坐标点。&lt;/p>
&lt;p>拖拉机的初始位置上没有干草捆。&lt;/p>
&lt;p>当约翰驾驶拖拉机时，他只能沿平行于坐标轴的方向（北，南，东和西）移动拖拉机，并且拖拉机必须每次移动整数距离。&lt;/p>
&lt;p>例如，驾驶拖拉机先向北移动 2 单位长度，然后向东移动 3 单位长度。&lt;/p>
&lt;p>拖拉机无法移动到干草捆占据的位置。&lt;/p>
&lt;p>请帮助约翰确定他需要移除的干草捆的最小数量，以便他能够将拖拉机开到二维平面的原点。&lt;/p></description></item><item><title>AcWing 2060. 奶牛选美</title><link>https://tategotoazarasi.github.io/post/acwing2060/</link><pubDate>Tue, 04 Jan 2022 21:57:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2060/</guid><description>&lt;p>听说最近两斑点的奶牛最受欢迎，约翰立即购进了一批两斑点牛。&lt;/p>
&lt;p>不幸的是，时尚潮流往往变化很快，当前最受欢迎的牛变成了一斑点牛。&lt;/p>
&lt;p>约翰希望通过给每头奶牛涂色，使得它们身上的两个斑点能够合为一个斑点，让它们能够更加时尚。&lt;/p></description></item><item><title>AcWing 2041. 干草堆</title><link>https://tategotoazarasi.github.io/post/acwing2041/</link><pubDate>Mon, 03 Jan 2022 15:24:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2041/</guid><description>&lt;p>贝茜对她最近在农场周围造成的一切恶作剧感到抱歉，她同意帮助农夫约翰把一批新到的干草捆堆起来。&lt;/p>
&lt;p>开始时，共有 N 个空干草堆，编号 1∼N。&lt;/p>
&lt;p>约翰给贝茜下达了 K 个指令，每条指令的格式为 &lt;code>A B&lt;/code>，这意味着贝茜要在 A..B 范围内的每个干草堆的顶部添加一个新的干草捆。&lt;/p>
&lt;p>例如，如果贝茜收到指令 &lt;code>10 13&lt;/code>，则她应在干草堆 10,11,12,13 中各添加一个干草捆。&lt;/p>
&lt;p>在贝茜完成了所有指令后，约翰想知道 N 个干草堆的中值高度——也就是说，如果干草堆按照高度从小到大排列，位于中间的干草堆的高度。&lt;/p>
&lt;p>方便起见，N 一定是奇数，所以中间堆是唯一的。&lt;/p>
&lt;p>请帮助贝茜确定约翰问题的答案。&lt;/p></description></item><item><title>AcWing 4204. 构造矩阵</title><link>https://tategotoazarasi.github.io/post/acwing4204/</link><pubDate>Sat, 01 Jan 2022 20:50:10 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4204/</guid><description>&lt;p>请你构造一个 n×n 的整数矩阵。要求，矩阵满足下列所有条件：&lt;/p>
&lt;ol>
&lt;li>矩阵中的所有元素的取值范围为 [0,n−1]。&lt;/li>
&lt;li>矩阵主对角线上的所有元素都为 0。主对角线是指从左上角到右下角这一斜线方向的对角线。&lt;/li>
&lt;li>该矩阵是对称矩阵。对称矩阵是指以主对角线为对称轴，各元素对应相等的矩阵。&lt;/li>
&lt;li>同一行上的所有元素两两不同。&lt;/li>
&lt;li>同一列上的所有元素两两不同。&lt;/li>
&lt;/ol></description></item><item><title>AcWing 4201. 01数</title><link>https://tategotoazarasi.github.io/post/acwing4201/</link><pubDate>Sat, 25 Dec 2021 21:22:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4201/</guid><description>&lt;p>如果一个&lt;strong>正整数&lt;/strong>，其各个数位上的数字均满足要么是 0，要么是 1，则称该数字为 01 数。&lt;/p>
&lt;p>例如，1 和 10 都是 01 数。&lt;/p>
&lt;p>给定一个整数 n。&lt;/p>
&lt;p>请你计算，1∼n 中有多少个 01 数。&lt;/p></description></item></channel></rss>