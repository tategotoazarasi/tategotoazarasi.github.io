<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Acwing on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/acwing/</link><description>Recent content in Acwing on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 20 May 2024 13:56:39 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/acwing/index.xml" rel="self" type="application/rss+xml"/><item><title>Acwing 240. 食物链</title><link>https://tategotoazarasi.github.io/post/acwing240/</link><pubDate>Wed, 11 May 2022 18:48:02 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing240/</guid><description>&lt;p>动物王国中有三类动物 A,B,C，这三类动物的食物链构成了有趣的环形。&lt;/p>
&lt;p>A 吃 B，B 吃 C，C 吃 A。&lt;/p>
&lt;p>现有 N 个动物，以 1∼N 编号。&lt;/p>
&lt;p>每个动物都是 A,B,C 中的一种，但是我们并不知道它到底是哪一种。&lt;/p>
&lt;p>有人用两种说法对这 N 个动物所构成的食物链关系进行描述：&lt;/p>
&lt;p>第一种说法是 &lt;code>1 X Y&lt;/code>，表示 X 和 Y 是同类。&lt;/p>
&lt;p>第二种说法是 &lt;code>2 X Y&lt;/code>，表示 X 吃 Y。&lt;/p>
&lt;p>此人对 N 个动物，用上述两种说法，一句接一句地说出 K 句话，这 K 句话有的是真的，有的是假的。&lt;/p>
&lt;p>当一句话满足下列三条之一时，这句话就是假话，否则就是真话。&lt;/p>
&lt;ol>
&lt;li>当前的话与前面的某些真的话冲突，就是假话；&lt;/li>
&lt;li>当前的话中 X 或 Y 比 N- 大，就是假话；&lt;/li>
&lt;li>当前的话表示 X 吃 X，就是假话。&lt;/li>
&lt;/ol>
&lt;p>你的任务是根据给定的 N 和 K 句话，输出假话的总数。&lt;/p></description></item><item><title>AcWing 1883. 删减</title><link>https://tategotoazarasi.github.io/post/acwing1883/</link><pubDate>Fri, 15 Apr 2022 13:43:00 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1883/</guid><description>&lt;p>农夫约翰把杂志上所有的文章摘抄了下来并把它变成了一个长度不超过 106 的字符串 S。&lt;/p>
&lt;p>他希望从 S 中删除子串 T。&lt;/p>
&lt;p>农夫约翰在 S 中从头开始寻找子串 T，一旦找到，就将它从 S 中删除，然后再次&lt;strong>从头开始&lt;/strong>寻找（而不是接着往下找）。&lt;/p>
&lt;p>他重复这个操作直到 S 中没有子串 T 为止。&lt;/p>
&lt;p>注意，删除一个子串 T 可能会导致一个新的子串 T 的出现。&lt;/p>
&lt;p>请帮助约翰完成这些操作并输出最后的 S。&lt;/p></description></item><item><title>AcWing 790. 数的三次方根</title><link>https://tategotoazarasi.github.io/post/acwing790/</link><pubDate>Thu, 07 Apr 2022 17:04:33 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing790/</guid><description>&lt;p>给定一个浮点数 n，求它的三次方根。&lt;/p></description></item><item><title>AcWing 785. 快速排序</title><link>https://tategotoazarasi.github.io/post/acwing785/</link><pubDate>Thu, 07 Apr 2022 17:04:23 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing785/</guid><description>&lt;p>给定你一个长度为 n 的整数数列。&lt;/p>
&lt;p>请你使用快速排序对这个数列按照从小到大进行排序。&lt;/p>
&lt;p>并将排好序的数列按顺序输出。&lt;/p></description></item><item><title>AcWing 788. 逆序对的数量</title><link>https://tategotoazarasi.github.io/post/acwing788/</link><pubDate>Thu, 07 Apr 2022 17:04:13 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing788/</guid><description>&lt;p>给定一个长度为 n 的整数数列，请你计算数列中的逆序对的数量。&lt;/p>
&lt;p>逆序对的定义如下：对于数列的第 i 个和第 j 个元素，如果满足 i&amp;lt;j 且 a[i]&amp;gt;a[j]，则其为一个逆序对；否则不是。&lt;/p></description></item><item><title>AcWing 4319. 合适数对</title><link>https://tategotoazarasi.github.io/post/acwing4319/</link><pubDate>Sat, 26 Mar 2022 20:44:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4319/</guid><description>&lt;p>给定一个长度为 n 的正整数数列 \(a_1,a_2,&amp;hellip;,a_n\) 和一个正整数 k。&lt;/p>
&lt;p>请你判断共有多少个数对 (l,r)&lt;/p>
&lt;p>同时满足：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>1≤l&amp;lt;r≤n&lt;/p>
&lt;/li>
&lt;li>
&lt;p>存在一个整数 x 使得 \(a_l×a_r=x^k\)成立&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>AcWing 3745. 牛的学术圈 I</title><link>https://tategotoazarasi.github.io/post/acwing3745/</link><pubDate>Thu, 17 Mar 2022 16:37:13 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing3745/</guid><description>&lt;p>由于对计算机科学的热爱，以及有朝一日成为 「Bessie 博士」的诱惑，奶牛 Bessie 开始攻读计算机科学博士学位。&lt;/p>
&lt;p>经过一段时间的学术研究，她已经发表了 N 篇论文，并且她的第 i 篇论文得到了来自其他研究文献的 ci 次引用。&lt;/p>
&lt;p>Bessie 听说学术成就可以用 h 指数来衡量。&lt;/p>
&lt;p>h 指数等于使得研究员有至少 h 篇引用次数不少于 h 的论文的最大整数 h。&lt;/p>
&lt;p>例如，如果一名研究员有 4 篇论文，引用次数分别为 (1,100,2,3)，则 h 指数为 2，然而若引用次数为 (1,100,3,3) 则 h 指数将会是 3。&lt;/p>
&lt;p>为了提升她的 h 指数，Bessie 计划写一篇综述，并引用一些她曾经写过的论文。&lt;/p>
&lt;p>由于页数限制，她至多可以在这篇综述中引用 L 篇论文，并且她只能引用每篇她的论文至多一次。&lt;/p>
&lt;p>请帮助 Bessie 求出在写完这篇综述后她可以达到的最大 h 指数。&lt;/p>
&lt;p>注意 Bessie 的导师可能会告知她纯粹为了提升 h 指数而写综述存在违反学术道德的嫌疑；我们不建议其他学者模仿 Bessie 的行为。&lt;/p></description></item><item><title>AcWing 36. 合并两个排序的链表</title><link>https://tategotoazarasi.github.io/post/acwing36/</link><pubDate>Mon, 07 Mar 2022 15:40:12 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing36/</guid><description>&lt;p>输入两个递增排序的链表，合并这两个链表并使新链表中的结点仍然是按照递增排序的。&lt;/p></description></item><item><title>AcWing 66. 两个链表的第一个公共结点</title><link>https://tategotoazarasi.github.io/post/acwing66/</link><pubDate>Sun, 06 Mar 2022 16:18:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing66/</guid><description>&lt;p>输入两个链表，找出它们的第一个公共结点。&lt;/p>
&lt;p>当不存在公共节点时，返回空节点。&lt;/p></description></item><item><title>AcWing 28. 在O(1)时间删除链表结点</title><link>https://tategotoazarasi.github.io/post/acwing28/</link><pubDate>Sun, 06 Mar 2022 16:15:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing28/</guid><description>&lt;p>给定单向链表的一个节点指针，定义一个函数在 O(1)时间删除该结点。&lt;/p>
&lt;p>假设链表一定存在，并且该节点一定不是尾节点。&lt;/p></description></item><item><title>AcWing 4298. 搭档</title><link>https://tategotoazarasi.github.io/post/acwing4298/</link><pubDate>Sat, 05 Feb 2022 21:34:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4298/</guid><description>&lt;p>有 n 个男孩，每个人的魅力值依次为 a1,a2,…,an.&lt;/p>
&lt;p>有 m 个女孩，每个人的魅力值依次为 b1,b2,…,bm。&lt;/p>
&lt;p>学校举办舞会，希望选出尽可能多的男女搭档参加。&lt;/p>
&lt;p>已知，当一对男女的魅力值相差不超过 1 时，他们才会愿意组成搭档。&lt;/p>
&lt;p>请问，最多可以&lt;strong>同时&lt;/strong>凑出多少对搭档参加舞会。&lt;/p>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>不能男男配对或女女配对。&lt;/li>
&lt;li>每个男生最多只能和一个女生配对，反之亦然。&lt;/li>
&lt;/ul></description></item><item><title>AcWing 4217. 机器人移动</title><link>https://tategotoazarasi.github.io/post/acwing4217/</link><pubDate>Sat, 29 Jan 2022 20:41:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4217/</guid><description>&lt;p>在一个无限大的二维平面上有一个机器人。&lt;/p>
&lt;p>初始时，机器人位于点 (0,0)。&lt;/p>
&lt;p>机器人可以执行四种行动指令：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>U&lt;/code> — 从 (x,y)移动到 (x,y+1)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>D&lt;/code> — 从 (x,y)移动到 (x,y−1)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>L&lt;/code> — 从 (x,y)移动到 (x−1,y)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>R&lt;/code> — 从 (x,y)移动到 (x+1,y)。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>给定一个长度为 n 的指令序列，指令编号 1∼n，机器人将按顺序依次执行序列中的每个行动指令。&lt;/p>
&lt;p>我们希望机器人最终抵达目标地点 (a,b)。&lt;/p>
&lt;p>为了达成这一目的，我们可能需要对指令序列进行修改。&lt;/p>
&lt;p>每次修改可以选择其中一个指令，并将其&lt;strong>替换&lt;/strong>为四种指令之一。&lt;/p>
&lt;p>注意，只能对序列中的指令进行替换，不得随意删除指令或添加额外指令。&lt;/p>
&lt;p>不妨设经过修改的指令中，编号最小的指令编号为 minID，编号最大的指令编号为 maxID。&lt;/p>
&lt;p>我们定义修改成本为 maxID−minID+1。&lt;/p>
&lt;p>例如，将 &lt;code>RRRRRRR&lt;/code> 修改为 &lt;code>RLRRLRL&lt;/code>，则编号为 2,5,7 的指令经过了修改，修改成本为 7−2+1=6。&lt;/p>
&lt;p>请你计算，为了使得机器人能够最终抵达目标点 (a,b)，所需花费的最小修改成本。&lt;/p>
&lt;p>如果不需要对序列进行修改，则成本为 0。&lt;/p></description></item><item><title>AcWing 4214. 三元组</title><link>https://tategotoazarasi.github.io/post/acwing4214/</link><pubDate>Sat, 22 Jan 2022 21:32:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4214/</guid><description>&lt;p>给定两个长度为 n 的整数序列 \(s_1,s_2,…,s_n\) 和 \(c_1,c_2,…,c_n\)。&lt;/p>
&lt;p>请你找到一个三元组 (i,j,k)，满足以下所有条件：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>i&amp;lt;j&amp;lt;k&lt;/p>
&lt;/li>
&lt;li>
&lt;p>\(s_i&amp;lt;s_j&amp;lt;s_k\)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>\(c_i+c_j+c_k\)尽可能小&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>输出 \(c_i+c_j+c_k\) 的最小可能值。&lt;/p></description></item><item><title>AcWing 1913. 公平摄影</title><link>https://tategotoazarasi.github.io/post/acwing1913/</link><pubDate>Thu, 20 Jan 2022 12:57:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1913/</guid><description>&lt;p>农夫约翰的 N 头奶牛站在一维长围栏的不同位置。&lt;/p>
&lt;p>第 i 头牛位于位置 xi，其所属品种为 bi（根西岛牛或荷斯坦牛）。&lt;/p>
&lt;p>所有奶牛的位置各不相同。&lt;/p>
&lt;p>约翰想给一段连续区间内的奶牛拍摄一张照片，用来在乡村集市上展览。&lt;/p>
&lt;p>但是我们希望他所有品种的奶牛都能在照片中得到公平的展示。&lt;/p>
&lt;p>因此，他希望确保无论照片中出些哪些品种的奶牛，每种品种的奶牛在照片中的数量都必须相等。&lt;/p>
&lt;p>例如，一张照片中只包含荷斯坦牛是可以的，包含荷斯坦牛和根西岛牛各 27 头也没问题，但是包含 10 头荷斯坦牛和 9 头根西岛牛则不可以。&lt;/p>
&lt;p>请确定，约翰可以拍下的满足以上条件的照片的最大尺寸。&lt;/p>
&lt;p>照片的尺寸是指照片中奶牛最大和最小位置之间的差。&lt;/p>
&lt;p>约翰最终可能只拍下一头奶牛，这种情况下，照片尺寸为 0。&lt;/p></description></item><item><title>AcWing 1934. 贝茜放慢脚步</title><link>https://tategotoazarasi.github.io/post/acwing1934/</link><pubDate>Mon, 17 Jan 2022 15:51:30 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1934/</guid><description>&lt;p>奶牛贝茜正在参加冬季哞林匹克运动会的越野滑雪比赛。&lt;/p>
&lt;p>她以每秒 1 米的速度出发。&lt;/p>
&lt;p>但是，随着时间的推移，她变得越来越疲倦，她开始放慢脚步。&lt;/p>
&lt;p>每次放慢脚步，贝茜的速度都会降低：减速一次后，她以每秒 1/2 米的速度移动，减速两次后，则以每秒 1/3 米的速度移动，依此类推。&lt;/p>
&lt;p>你将被告知何时何地贝茜会减速。&lt;/p></description></item><item><title>AcWing 4211. 序列重排</title><link>https://tategotoazarasi.github.io/post/acwing4211/</link><pubDate>Sat, 15 Jan 2022 20:42:10 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4211/</guid><description>&lt;p>给定一个长度为 n 的整数序列 \(a_1,a_2,…,a_n\)。&lt;/p>
&lt;p>请你对序列进行重新排序（也可以保持原序列），要求新序列满足每个元素（第 1 个除外）都恰好是前一个元素的两倍或前一个元素的三分之一。&lt;/p>
&lt;p>保证输入一定有解。&lt;/p></description></item><item><title>AcWing 1978. 奶牛过马路</title><link>https://tategotoazarasi.github.io/post/acwing1978/</link><pubDate>Tue, 11 Jan 2022 16:08:30 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1978/</guid><description>&lt;p>每天，农夫约翰的 N 头奶牛都会穿过农场中间的马路。&lt;/p>
&lt;p>考虑约翰的农场在二维平面的地图，马路沿水平方向延伸，马路的一侧由直线 y=0 描述，另一侧由直线 y=1 描述。&lt;/p>
&lt;p>奶牛 i 从马路一侧的位置 \((a_i,0)\) 沿直线过马路到达另一侧的位置 \((b_i,1)\)。&lt;/p>
&lt;p>所有 \(a_i\) 互不相同，所有 \(b_i\) 互不相同。&lt;/p>
&lt;p>尽管他的奶牛们行动敏捷，他还是担心行动路径交叉的两头奶牛在过马路时发生碰撞。&lt;/p>
&lt;p>约翰认为，如果一头奶牛的行动路径没有跟其他任何奶牛的行动路径相交，则该奶牛是安全的。&lt;/p>
&lt;p>请帮助约翰计算安全奶牛的数量。&lt;/p></description></item><item><title>AcWing 1996. 打乱字母</title><link>https://tategotoazarasi.github.io/post/acwing1996/</link><pubDate>Sun, 09 Jan 2022 18:39:18 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1996/</guid><description>&lt;p>农夫约翰将按字典序排列的 N 头奶牛的名字列表贴在了牛棚的门上。&lt;/p>
&lt;p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。&lt;/p>
&lt;p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。&lt;/p>
&lt;p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。&lt;/p>
&lt;p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。&lt;/p></description></item><item><title>AcWing 2014. 岛</title><link>https://tategotoazarasi.github.io/post/acwing2014/</link><pubDate>Thu, 06 Jan 2022 10:51:11 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2014/</guid><description>&lt;p>每当下雨时，农夫约翰的田地总是被洪水淹没。&lt;/p>
&lt;p>由于田地不是完全水平的，所以一些地方充满水后，留下了许多被水隔开的“岛”。&lt;/p>
&lt;p>约翰的田地被描述为由 N 个连续高度值 H1,…,HN 指定的一维场景。&lt;/p>
&lt;p>假设该场景被无限高的围墙包围着，请考虑暴雨期间发生的情况：&lt;/p>
&lt;p>最低处首先被水覆盖，形成一些不连贯的岛，随着水位的不断上升，这些岛最终都会被覆盖。&lt;/p>
&lt;p>一旦水位等于一块田地的高度，那块田地就被认为位于水下。&lt;/p>
&lt;p>&lt;img src="https://tategotoazarasi.github.io/images/19_8c986a0cb5-fig_islands.png" alt="fig_islands.png">&lt;/p>
&lt;p>上图显示了一个示例：在左图中，我们只加入了刚好超过 1 单位的水，此时剩下 4 个岛（最大岛屿剩余数量），而在右图中，我们共加入了 7 单位的水，此时仅剩下 2 个岛。&lt;/p>
&lt;p>请计算，暴风雨期间我们能在某个时间点看到的最大岛屿数量。&lt;/p>
&lt;p>水会一直上升到所有田地都在水下。&lt;/p></description></item><item><title>AcWing 2019. 拖拉机</title><link>https://tategotoazarasi.github.io/post/acwing2019/</link><pubDate>Wed, 05 Jan 2022 10:59:26 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2019/</guid><description>&lt;p>干了一整天的活，农夫约翰完全忘记了他把拖拉机落在田地中央了。&lt;/p>
&lt;p>他的奶牛非常调皮，决定对约翰来场恶作剧。&lt;/p>
&lt;p>她们在田地的不同地方放了 N 捆干草，这样一来，约翰想要开走拖拉机就必须先移除一些干草捆。拖拉机的位置以及 N 捆干草的位置都是二维平面上的整数坐标点。&lt;/p>
&lt;p>拖拉机的初始位置上没有干草捆。&lt;/p>
&lt;p>当约翰驾驶拖拉机时，他只能沿平行于坐标轴的方向（北，南，东和西）移动拖拉机，并且拖拉机必须每次移动整数距离。&lt;/p>
&lt;p>例如，驾驶拖拉机先向北移动 2 单位长度，然后向东移动 3 单位长度。&lt;/p>
&lt;p>拖拉机无法移动到干草捆占据的位置。&lt;/p>
&lt;p>请帮助约翰确定他需要移除的干草捆的最小数量，以便他能够将拖拉机开到二维平面的原点。&lt;/p></description></item><item><title>AcWing 2060. 奶牛选美</title><link>https://tategotoazarasi.github.io/post/acwing2060/</link><pubDate>Tue, 04 Jan 2022 21:57:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2060/</guid><description>&lt;p>听说最近两斑点的奶牛最受欢迎，约翰立即购进了一批两斑点牛。&lt;/p>
&lt;p>不幸的是，时尚潮流往往变化很快，当前最受欢迎的牛变成了一斑点牛。&lt;/p>
&lt;p>约翰希望通过给每头奶牛涂色，使得它们身上的两个斑点能够合为一个斑点，让它们能够更加时尚。&lt;/p></description></item><item><title>AcWing 2041. 干草堆</title><link>https://tategotoazarasi.github.io/post/acwing2041/</link><pubDate>Mon, 03 Jan 2022 15:24:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2041/</guid><description>&lt;p>贝茜对她最近在农场周围造成的一切恶作剧感到抱歉，她同意帮助农夫约翰把一批新到的干草捆堆起来。&lt;/p>
&lt;p>开始时，共有 N 个空干草堆，编号 1∼N。&lt;/p>
&lt;p>约翰给贝茜下达了 K 个指令，每条指令的格式为 &lt;code>A B&lt;/code>，这意味着贝茜要在 A..B 范围内的每个干草堆的顶部添加一个新的干草捆。&lt;/p>
&lt;p>例如，如果贝茜收到指令 &lt;code>10 13&lt;/code>，则她应在干草堆 10,11,12,13 中各添加一个干草捆。&lt;/p>
&lt;p>在贝茜完成了所有指令后，约翰想知道 N 个干草堆的中值高度——也就是说，如果干草堆按照高度从小到大排列，位于中间的干草堆的高度。&lt;/p>
&lt;p>方便起见，N 一定是奇数，所以中间堆是唯一的。&lt;/p>
&lt;p>请帮助贝茜确定约翰问题的答案。&lt;/p></description></item><item><title>AcWing 4204. 构造矩阵</title><link>https://tategotoazarasi.github.io/post/acwing4204/</link><pubDate>Sat, 01 Jan 2022 20:50:10 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4204/</guid><description>&lt;p>请你构造一个 n×n 的整数矩阵。要求，矩阵满足下列所有条件：&lt;/p>
&lt;ol>
&lt;li>矩阵中的所有元素的取值范围为 [0,n−1]。&lt;/li>
&lt;li>矩阵主对角线上的所有元素都为 0。主对角线是指从左上角到右下角这一斜线方向的对角线。&lt;/li>
&lt;li>该矩阵是对称矩阵。对称矩阵是指以主对角线为对称轴，各元素对应相等的矩阵。&lt;/li>
&lt;li>同一行上的所有元素两两不同。&lt;/li>
&lt;li>同一列上的所有元素两两不同。&lt;/li>
&lt;/ol></description></item><item><title>AcWing 4201. 01数</title><link>https://tategotoazarasi.github.io/post/acwing4201/</link><pubDate>Sat, 25 Dec 2021 21:22:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4201/</guid><description>&lt;p>如果一个&lt;strong>正整数&lt;/strong>，其各个数位上的数字均满足要么是 0，要么是 1，则称该数字为 01 数。&lt;/p>
&lt;p>例如，1 和 10 都是 01 数。&lt;/p>
&lt;p>给定一个整数 n。&lt;/p>
&lt;p>请你计算，1∼n 中有多少个 01 数。&lt;/p></description></item></channel></rss>