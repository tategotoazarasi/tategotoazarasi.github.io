<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anki on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/anki/</link><description>Recent content in Anki on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 02 Jul 2024 04:24:14 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/anki/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Puppeteer 渲染并提取 Anki 卡片内容的方法</title><link>https://tategotoazarasi.github.io/post/methods-for-rendering-and-extracting-anki-card-content-using-puppeteer/</link><pubDate>Tue, 21 May 2024 15:05:44 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/methods-for-rendering-and-extracting-anki-card-content-using-puppeteer/</guid><description>&lt;p>Anki 是一款流行的学习软件，通过卡片记忆法帮助用户有效地记忆信息。然而，许多Anki卡片使用了混淆技术，以防止用户直接导出卡片内容，从而保护版权和提高用户使用平台的依赖性。这种混淆技术使得用户在尝试提取卡片内容时遇到困难，无法直接获取完整的卡片信息。为了解决这一问题，我们可以使用 Puppeteer，这是一款强大的无头浏览器自动化工具，通过渲染卡片的HTML内容来绕过混淆技术，获取所需的卡片数据。&lt;/p>
&lt;p>Anki卡片通常包含混淆技术，如CSS样式的隐藏、JavaScript的动态加载等。这些技术使得卡片内容在普通的HTML解析工具中无法正确显示。直接导出卡片内容的方法无法应对这些混淆技术，需要借助更高级的工具来处理。Puppeteer 作为一个无头浏览器，可以完全渲染网页，就像用户在浏览器中打开网页一样。通过这种方式，我们能够准确地获取到卡片的真实内容。此外，结合 JSDOM，可以进一步解析渲染后的HTML，提取具体的选项和答案信息。这种方法不仅能够绕过混淆技术，还可以确保提取到的数据完整准确，为后续的数据处理和分析提供了可靠的基础。通过本文，我们将详细介绍如何使用 Puppeteer 渲染并提取 Anki 卡片内容的方法，帮助用户有效地获取所需信息。&lt;/p></description></item><item><title>如何使用Python去重考研政治选择题库</title><link>https://tategotoazarasi.github.io/post/how-to-use-python-to-remove-duplicates-from-the-postgraduate-political-science-question-bank/</link><pubDate>Mon, 20 May 2024 21:39:12 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/how-to-use-python-to-remove-duplicates-from-the-postgraduate-political-science-question-bank/</guid><description>&lt;p>在准备考研政治时，积累大量的选择题是非常重要的。然而，重复的题目不仅浪费时间，还影响复习效率。考研政治是考研复习中的重要一环，大量的选择题可以帮助考生更好地掌握知识点，但在积累题库的过程中，往往会出现大量重复的题目。这些重复题目不仅占用存储空间，还浪费考生宝贵的复习时间，影响复习效率。因此，对题库进行去重变得尤为重要。本文将介绍两种基于Python的去重方法，帮助您轻松清理重复题目，从而更高效地备战考研。通过去重，我们可以确保题库的独特性，提高复习的针对性和效率，为考生提供更好的复习体验和更高的考试通过率。&lt;/p>
&lt;p>为了解决考研政治选择题库中的重复问题，我们采用了两种不同的去重方法：基于MD5哈希和基于BERT相似度。这两种方法各有优缺点，结合使用可以更全面地清理题库中的重复题目。&lt;/p></description></item></channel></rss>