<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>中等 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E4%B8%AD%E7%AD%89/</link><description>Recent content in 中等 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 31 Dec 2021 11:55:26 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E4%B8%AD%E7%AD%89/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 538. 把二叉搜索树转换为累加树</title><link>https://tategotoazarasi.github.io/post/convert-bst-to-greater-tree/</link><pubDate>Fri, 31 Dec 2021 11:55:26 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/convert-bst-to-greater-tree/</guid><description>&lt;p>给出二叉 &lt;strong>搜索&lt;/strong> 树的根节点，该树的节点值各不相同，请你将其转换为累加树（Greater Sum Tree），使每个节点 &lt;code>node&lt;/code>  的新值等于原树中大于或等于  &lt;code>node.val&lt;/code>  的值之和。&lt;/p></description></item><item><title>LeetCode 846. 一手顺子</title><link>https://tategotoazarasi.github.io/post/hand-of-straights/</link><pubDate>Thu, 30 Dec 2021 20:02:37 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/hand-of-straights/</guid><description>&lt;p>Alice 手中有一把牌，她想要重新排列这些牌，分成若干组，使每一组的牌数都是 &lt;code>groupSize&lt;/code> ，并且由 &lt;code>groupSize&lt;/code> 张连续的牌组成。&lt;/p>
&lt;p>给你一个整数数组 &lt;code>hand&lt;/code> 其中 &lt;code>hand[i]&lt;/code> 是写在第 &lt;code>i&lt;/code> 张牌，和一个整数 &lt;code>groupSize&lt;/code> 。如果她可能重新排列这些牌，返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code> 。&lt;/p></description></item><item><title>LeetCode 5965. 相同元素的间隔之和</title><link>https://tategotoazarasi.github.io/post/intervals-between-identical-elements/</link><pubDate>Sun, 26 Dec 2021 15:11:10 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/intervals-between-identical-elements/</guid><description>&lt;p>给你一个下标从 &lt;strong>0&lt;/strong> 开始、由 &lt;code>n&lt;/code> 个整数组成的数组 &lt;code>arr&lt;/code> 。&lt;/p>
&lt;p>&lt;code>arr&lt;/code> 中两个元素的 &lt;strong>间隔&lt;/strong> 定义为它们下标之间的 &lt;strong>绝对差&lt;/strong> 。更正式地，&lt;code>arr[i]&lt;/code> 和 &lt;code>arr[j]&lt;/code> 之间的间隔是 &lt;code>|i - j|&lt;/code> 。&lt;/p>
&lt;p>返回一个长度为 &lt;code>n&lt;/code> 的数组  &lt;code>intervals&lt;/code> ，其中 &lt;code>intervals[i]&lt;/code> 是 &lt;code>arr[i]&lt;/code> 和 &lt;code>arr&lt;/code> 中每个相同元素（与 &lt;code>arr[i]&lt;/code> 的值相同）的 &lt;strong>间隔之和&lt;/strong> &lt;em>。&lt;/em>&lt;/p></description></item><item><title>LeetCode 5964. 执行所有后缀指令</title><link>https://tategotoazarasi.github.io/post/execution-of-all-suffix-instructions-staying-in-a-grid/</link><pubDate>Sun, 26 Dec 2021 15:10:59 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/execution-of-all-suffix-instructions-staying-in-a-grid/</guid><description>&lt;p>现有一个 &lt;code>n x n&lt;/code> 大小的网格，左上角单元格坐标 &lt;code>(0, 0)&lt;/code> ，右下角单元格坐标 &lt;code>(n - 1, n - 1)&lt;/code> 。给你整数 &lt;code>n&lt;/code> 和一个整数数组 &lt;code>startPos&lt;/code> ，其中 &lt;code>startPos = [startrow, startcol]&lt;/code> 表示机器人最开始在坐标为 &lt;code>(startrow, startcol)&lt;/code> 的单元格上。&lt;/p>
&lt;p>另给你一个长度为 &lt;code>m&lt;/code> 、下标从 &lt;strong>0&lt;/strong> 开始的字符串 &lt;code>s&lt;/code> ，其中 &lt;code>s[i]&lt;/code> 是对机器人的第 &lt;code>i&lt;/code> 条指令：&lt;code>'L'&lt;/code>（向左移动），&lt;code>'R'&lt;/code>（向右移动），&lt;code>'U'&lt;/code>（向上移动）和 &lt;code>'D'&lt;/code>（向下移动）。&lt;/p>
&lt;p>机器人可以从 &lt;code>s&lt;/code> 中的任一第 &lt;code>i&lt;/code> 条指令开始执行。它将会逐条执行指令直到 &lt;code>s&lt;/code> 的末尾，但在满足下述条件之一时，机器人将会停止：&lt;/p>
&lt;ul>
&lt;li>下一条指令将会导致机器人移动到网格外。&lt;/li>
&lt;li>没有指令可以执行。&lt;/li>
&lt;/ul>
&lt;p>返回一个长度为 &lt;code>m&lt;/code> 的数组 &lt;code>answer&lt;/code> ，其中 &lt;code>answer[i]&lt;/code> 是机器人从第 &lt;code>i&lt;/code>  条指令 &lt;strong>开始&lt;/strong> ，可以执行的 &lt;strong>指令数目&lt;/strong> 。&lt;/p></description></item><item><title>LeetCode 5948. 判断一个括号字符串是否有效</title><link>https://tategotoazarasi.github.io/post/check-if-a-parentheses-string-can-be-valid/</link><pubDate>Sun, 26 Dec 2021 09:22:53 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/check-if-a-parentheses-string-can-be-valid/</guid><description>&lt;p>一个括号字符串是只由  &lt;code>'('&lt;/code> 和  &lt;code>')'&lt;/code>  组成的  &lt;strong>非空&lt;/strong>  字符串。如果一个字符串满足下面 &lt;strong>任意&lt;/strong>  一个条件，那么它就是有效的：&lt;/p>
&lt;ul>
&lt;li>字符串为  &lt;code>()&lt;/code>.&lt;/li>
&lt;li>它可以表示为 &lt;code>AB&lt;/code>（&lt;code>A&lt;/code>  与  &lt;code>B&lt;/code>  连接），其中&lt;code>A&lt;/code> 和  &lt;code>B&lt;/code>  都是有效括号字符串。&lt;/li>
&lt;li>它可以表示为  &lt;code>(A)&lt;/code> ，其中  &lt;code>A&lt;/code>  是一个有效括号字符串。&lt;/li>
&lt;/ul>
&lt;p>给你一个括号字符串  &lt;code>s&lt;/code>  和一个字符串  &lt;code>locked&lt;/code> ，两者长度都为  &lt;code>n&lt;/code> 。&lt;code>locked&lt;/code>  是一个二进制字符串，只包含  &lt;code>'0'&lt;/code>  和  &lt;code>'1'&lt;/code> 。对于  &lt;code>locked&lt;/code>  中  &lt;strong>每一个&lt;/strong>  下标  &lt;code>i&lt;/code> ：&lt;/p>
&lt;ul>
&lt;li>如果  &lt;code>locked[i]&lt;/code>  是  &lt;code>'1'&lt;/code> ，你 &lt;strong>不能&lt;/strong>  改变  &lt;code>s[i]&lt;/code> 。&lt;/li>
&lt;li>如果  &lt;code>locked[i]&lt;/code>  是  &lt;code>'0'&lt;/code> ，你  &lt;strong>可以&lt;/strong>  将  &lt;code>s[i]&lt;/code>  变为  &lt;code>'('&lt;/code>  或者  &lt;code>')'&lt;/code> 。&lt;/li>
&lt;/ul>
&lt;p>如果你可以将 &lt;code>s&lt;/code>  变为有效括号字符串，请你返回  &lt;code>true&lt;/code> ，否则返回  &lt;code>false&lt;/code> 。&lt;/p></description></item><item><title>LeetCode 5947. 从给定原材料中找到所有可以做出的菜</title><link>https://tategotoazarasi.github.io/post/find-all-possible-recipes-from-given-supplies/</link><pubDate>Sun, 26 Dec 2021 09:22:40 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/find-all-possible-recipes-from-given-supplies/</guid><description>&lt;p>你有 &lt;code>n&lt;/code>  道不同菜的信息。给你一个字符串数组  &lt;code>recipes&lt;/code>  和一个二维字符串数组  &lt;code>ingredients&lt;/code> 。第  &lt;code>i&lt;/code>  道菜的名字为  &lt;code>recipes[i]&lt;/code> ，如果你有它  &lt;strong>所有&lt;/strong>  的原材料  &lt;code>ingredients[i]&lt;/code> ，那么你可以  &lt;strong>做出&lt;/strong>  这道菜。一道菜的原材料可能是  &lt;strong>另一道&lt;/strong>  菜，也就是说  &lt;code>ingredients[i]&lt;/code>  可能包含  &lt;code>recipes&lt;/code>  中另一个字符串。&lt;/p>
&lt;p>同时给你一个字符串数组  &lt;code>supplies&lt;/code> ，它包含你初始时拥有的所有原材料，每一种原材料你都有无限多。&lt;/p>
&lt;p>请你返回你可以做出的所有菜。你可以以 &lt;strong>任意顺序&lt;/strong>  返回它们。&lt;/p>
&lt;p>注意两道菜在它们的原材料中可能互相包含。&lt;/p></description></item><item><title>AcWing 4201. 01数</title><link>https://tategotoazarasi.github.io/post/acwing4201/</link><pubDate>Sat, 25 Dec 2021 21:22:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4201/</guid><description>&lt;p>如果一个&lt;strong>正整数&lt;/strong>，其各个数位上的数字均满足要么是 0，要么是 1，则称该数字为 01 数。&lt;/p>
&lt;p>例如，1 和 10 都是 01 数。&lt;/p>
&lt;p>给定一个整数 n。&lt;/p>
&lt;p>请你计算，1∼n 中有多少个 01 数。&lt;/p></description></item></channel></rss>