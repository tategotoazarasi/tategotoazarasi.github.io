<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>二分 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E4%BA%8C%E5%88%86/</link><description>Recent content in 二分 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Mar 2024 07:45:18 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E4%BA%8C%E5%88%86/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 6040. Maximum Total Beauty of the Gardens</title><link>https://tategotoazarasi.github.io/post/maximum-total-beauty-of-the-gardens/</link><pubDate>Sun, 10 Apr 2022 12:20:00 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/maximum-total-beauty-of-the-gardens/</guid><description>&lt;p>Alice is a caretaker of &lt;code>n&lt;/code> gardens and she wants to plant flowers to maximize the total beauty of all her gardens.&lt;/p>
&lt;p>You are given a &lt;strong>0-indexed&lt;/strong> integer array &lt;code>flowers&lt;/code> of size &lt;code>n&lt;/code>, where &lt;code>flowers[i]&lt;/code> is the number of flowers already planted in the &lt;code>ith&lt;/code> garden. Flowers that are already planted &lt;strong>cannot&lt;/strong> be removed. You are then given another integer &lt;code>newFlowers&lt;/code>, which is the &lt;strong>maximum&lt;/strong> number of flowers that Alice can additionally plant. You are also given the integers &lt;code>target&lt;/code>, &lt;code>full&lt;/code>, and &lt;code>partial&lt;/code>.&lt;/p>
&lt;p>A garden is considered &lt;strong>complete&lt;/strong> if it has &lt;strong>at least&lt;/strong> &lt;code>target&lt;/code> flowers. The &lt;strong>total beauty&lt;/strong> of the gardens is then determined as the &lt;strong>sum&lt;/strong> of the following:&lt;/p>
&lt;ul>
&lt;li>The number of &lt;strong>complete&lt;/strong> gardens multiplied by &lt;code>full&lt;/code>.&lt;/li>
&lt;li>The &lt;strong>minimum&lt;/strong> number of flowers in any of the &lt;strong>incomplete&lt;/strong> gardens multiplied by &lt;code>partial&lt;/code>. If there are no incomplete gardens, then this value will be &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Return &lt;em>the &lt;strong>maximum&lt;/strong> total beauty that Alice can obtain after planting at most&lt;/em> &lt;code>newFlowers&lt;/code> &lt;em>flowers.&lt;/em>&lt;/p></description></item><item><title>AcWing 790. 数的三次方根</title><link>https://tategotoazarasi.github.io/post/acwing790/</link><pubDate>Thu, 07 Apr 2022 17:04:33 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing790/</guid><description>&lt;p>给定一个浮点数 n，求它的三次方根。&lt;/p></description></item><item><title>AcWing 4217. 机器人移动</title><link>https://tategotoazarasi.github.io/post/acwing4217/</link><pubDate>Sat, 29 Jan 2022 20:41:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing4217/</guid><description>&lt;p>在一个无限大的二维平面上有一个机器人。&lt;/p>
&lt;p>初始时，机器人位于点 (0,0)。&lt;/p>
&lt;p>机器人可以执行四种行动指令：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>U&lt;/code> — 从 (x,y)移动到 (x,y+1)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>D&lt;/code> — 从 (x,y)移动到 (x,y−1)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>L&lt;/code> — 从 (x,y)移动到 (x−1,y)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>R&lt;/code> — 从 (x,y)移动到 (x+1,y)。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>给定一个长度为 n 的指令序列，指令编号 1∼n，机器人将按顺序依次执行序列中的每个行动指令。&lt;/p>
&lt;p>我们希望机器人最终抵达目标地点 (a,b)。&lt;/p>
&lt;p>为了达成这一目的，我们可能需要对指令序列进行修改。&lt;/p>
&lt;p>每次修改可以选择其中一个指令，并将其&lt;strong>替换&lt;/strong>为四种指令之一。&lt;/p>
&lt;p>注意，只能对序列中的指令进行替换，不得随意删除指令或添加额外指令。&lt;/p>
&lt;p>不妨设经过修改的指令中，编号最小的指令编号为 minID，编号最大的指令编号为 maxID。&lt;/p>
&lt;p>我们定义修改成本为 maxID−minID+1。&lt;/p>
&lt;p>例如，将 &lt;code>RRRRRRR&lt;/code> 修改为 &lt;code>RLRRLRL&lt;/code>，则编号为 2,5,7 的指令经过了修改，修改成本为 7−2+1=6。&lt;/p>
&lt;p>请你计算，为了使得机器人能够最终抵达目标点 (a,b)，所需花费的最小修改成本。&lt;/p>
&lt;p>如果不需要对序列进行修改，则成本为 0。&lt;/p></description></item><item><title>LeetCode 5983. 同时运行 N 台电脑的最长时间</title><link>https://tategotoazarasi.github.io/post/maximum-running-time-of-n-computers/</link><pubDate>Sun, 16 Jan 2022 12:20:00 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/maximum-running-time-of-n-computers/</guid><description>&lt;p>你有  &lt;code>n&lt;/code>  台电脑。给你整数  &lt;code>n&lt;/code>  和一个下标从 &lt;strong>0&lt;/strong>  开始的整数数组  &lt;code>batteries&lt;/code> ，其中第  &lt;code>i&lt;/code>  个电池可以让一台电脑 &lt;strong>运行&lt;/strong> &lt;code>batteries[i]&lt;/code>  分钟。你想使用这些电池让  &lt;strong>全部&lt;/strong> &lt;code>n&lt;/code>  台电脑 &lt;strong>同时&lt;/strong>  运行。&lt;/p>
&lt;p>一开始，你可以给每台电脑连接 &lt;strong>至多一个电池&lt;/strong> 。然后在任意整数时刻，你都可以将一台电脑与它的电池断开连接，并连接另一个电池，你可以进行这个操作 &lt;strong>任意次&lt;/strong> 。新连接的电池可以是一个全新的电池，也可以是别的电脑用过的电池。断开连接和连接新的电池不会花费任何时间。&lt;/p>
&lt;p>注意，你不能给电池充电。&lt;/p>
&lt;p>请你返回你可以让 &lt;code>n&lt;/code>  台电脑同时运行的 &lt;strong>最长&lt;/strong>  分钟数。&lt;/p></description></item><item><title>AcWing 1996. 打乱字母</title><link>https://tategotoazarasi.github.io/post/acwing1996/</link><pubDate>Sun, 09 Jan 2022 18:39:18 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1996/</guid><description>&lt;p>农夫约翰将按字典序排列的 N 头奶牛的名字列表贴在了牛棚的门上。&lt;/p>
&lt;p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。&lt;/p>
&lt;p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。&lt;/p>
&lt;p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。&lt;/p>
&lt;p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。&lt;/p></description></item></channel></rss>