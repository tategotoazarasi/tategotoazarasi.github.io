<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>二分查找 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><description>Recent content in 二分查找 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Dec 2021 09:11:28 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 167. 两数之和 II - 输入有序数组</title><link>https://tategotoazarasi.github.io/post/two-sum-ii-input-array-is-sorted/</link><pubDate>Fri, 24 Dec 2021 09:11:28 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/two-sum-ii-input-array-is-sorted/</guid><description>&lt;p>给定一个已按照 &lt;strong>非递减顺序排列&lt;/strong> 的整数数组  &lt;code>numbers&lt;/code> ，请你从数组中找出两个数满足相加之和等于目标数  &lt;code>target&lt;/code> 。&lt;/p>
&lt;p>函数应该以长度为 &lt;code>2&lt;/code> 的整数数组的形式返回这两个数的下标值*。*&lt;code>numbers&lt;/code> 的下标 &lt;strong>从 1 开始计数&lt;/strong> ，所以答案数组应当满足 &lt;code>1 &amp;lt;= answer[0] &amp;lt; answer[1] &amp;lt;= numbers.length&lt;/code> 。&lt;/p>
&lt;p>你可以假设每个输入 &lt;strong>只对应唯一的答案&lt;/strong> ，而且你 &lt;strong>不可以&lt;/strong> 重复使用相同的元素。&lt;/p></description></item><item><title>LeetCode 69. Sqrt(x)</title><link>https://tategotoazarasi.github.io/post/sqrtx/</link><pubDate>Fri, 10 Dec 2021 11:13:13 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/sqrtx/</guid><description>&lt;p>给你一个非负整数 &lt;code>x&lt;/code> ，计算并返回  &lt;code>x&lt;/code>  的 &lt;strong>算术平方根&lt;/strong> 。&lt;/p>
&lt;p>由于返回类型是整数，结果只保留 &lt;strong>整数部分&lt;/strong> ，小数部分将被 &lt;strong>舍去 。&lt;/strong>&lt;/p></description></item><item><title>LeetCode 35. 搜索插入位置</title><link>https://tategotoazarasi.github.io/post/search-insert-position/</link><pubDate>Wed, 08 Dec 2021 09:29:58 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/search-insert-position/</guid><description>&lt;p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。&lt;/p>
&lt;p>请必须使用时间复杂度为 &lt;code>O(log n)&lt;/code> 的算法。&lt;/p></description></item></channel></rss>