<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>广度优先搜索 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link><description>Recent content in 广度优先搜索 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 06 Nov 2024 09:26:33 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 127. 单词接龙</title><link>https://tategotoazarasi.github.io/post/word-ladder/</link><pubDate>Tue, 03 Jan 2023 14:52:48 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/word-ladder/</guid><description>&lt;p>字典  &lt;code>wordList&lt;/code> 中从单词 &lt;code>beginWord&lt;/code>和 &lt;code>endWord&lt;/code> 的&lt;strong>转换序列&lt;/strong>是一个按下述规格形成的序列&lt;/p>
&lt;p>\(beginWord \to s_1 \to s_2 \to \dots \to s_k\)：&lt;/p>
&lt;ul>
&lt;li>每一对相邻的单词只差一个字母。&lt;/li>
&lt;li>对于  &lt;code>1 &amp;lt;= i &amp;lt;= k&lt;/code>  时，每个 \(s_i\)  都在&lt;code>wordList&lt;/code>  中。注意， &lt;code>beginWord&lt;/code> 不需要在&lt;code>wordList&lt;/code>  中。&lt;/li>
&lt;li>\(s_k == endWord\)&lt;/li>
&lt;/ul>
&lt;p>给你两个单词 &lt;code>beginWord&lt;/code>和 &lt;code>endWord&lt;/code> 和一个字典 &lt;code>wordList&lt;/code> ，返回从  &lt;code>beginWord&lt;/code> 到  &lt;code>endWord&lt;/code> 的&lt;strong>最短转换序列&lt;/strong>中的&lt;strong>单词数目&lt;/strong>。如果不存在这样的转换序列，返回 &lt;code>0&lt;/code> 。&lt;/p></description></item><item><title>LeetCode 329. 矩阵中的最长递增路径</title><link>https://tategotoazarasi.github.io/post/longest-increasing-path-in-a-matrix/</link><pubDate>Mon, 19 Sep 2022 13:41:55 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/longest-increasing-path-in-a-matrix/</guid><description>&lt;p>给定一个  &lt;code>m x n&lt;/code> 整数矩阵  &lt;code>matrix&lt;/code> ，找出其中 &lt;strong>最长递增路径&lt;/strong> 的长度。&lt;/p>
&lt;p>对于每个单元格，你可以往上，下，左，右四个方向移动。 你 &lt;strong>不能&lt;/strong> 在 &lt;strong>对角线&lt;/strong> 方向上移动或移动到 &lt;strong>边界外&lt;/strong>（即不允许环绕）。&lt;/p></description></item><item><title>LeetCode 301. 删除无效的括号</title><link>https://tategotoazarasi.github.io/post/remove-invalid-parentheses/</link><pubDate>Tue, 06 Sep 2022 13:11:21 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/remove-invalid-parentheses/</guid><description>&lt;p>给你一个由若干括号和字母组成的字符串 &lt;code>s&lt;/code>，删除最小数量的无效括号，使得输入的字符串有效。&lt;/p>
&lt;p>返回所有可能的结果。答案可以按 &lt;strong>任意顺序&lt;/strong> 返回。&lt;/p></description></item><item><title>LeetCode 310. Minimum Height Trees</title><link>https://tategotoazarasi.github.io/post/minimum-height-trees/</link><pubDate>Wed, 06 Apr 2022 15:03:31 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/minimum-height-trees/</guid><description>&lt;p>A tree is an undirected graph in which any two vertices are connected by &lt;em>exactly&lt;/em> one path. In other words, any connected graph without simple cycles is a tree.&lt;/p>
&lt;p>Given a tree of &lt;code>n&lt;/code> nodes labelled from &lt;code>0&lt;/code> to &lt;code>n - 1&lt;/code>, and an array of &lt;code>n - 1&lt;/code> &lt;code>edges&lt;/code> where &lt;code>edges[i] = [ai, bi]&lt;/code> indicates that there is an undirected edge between the two nodes &lt;code>ai&lt;/code> and &lt;code>bi&lt;/code> in the tree, you can choose any node of the tree as the root. When you select a node &lt;code>x&lt;/code> as the root, the result tree has height &lt;code>h&lt;/code>. Among all possible rooted trees, those with minimum height (i.e. &lt;code>min(h)&lt;/code>)  are called &lt;strong>minimum height trees&lt;/strong> (MHTs).&lt;/p>
&lt;p>Return &lt;em>a list of all &lt;strong>MHTs&amp;rsquo;&lt;/strong> root labels&lt;/em>. You can return the answer in &lt;strong>any order&lt;/strong>.&lt;/p>
&lt;p>The &lt;strong>height&lt;/strong> of a rooted tree is the number of edges on the longest downward path between the root and a leaf.&lt;/p></description></item><item><title>LeetCode 1036. 逃离大迷宫</title><link>https://tategotoazarasi.github.io/post/escape-a-large-maze/</link><pubDate>Tue, 11 Jan 2022 16:08:56 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/escape-a-large-maze/</guid><description>&lt;p>在一个 \(10^6 \times 10^6\) 的网格中，每个网格上方格的坐标为 &lt;code>(x, y)&lt;/code> 。&lt;/p>
&lt;p>现在从源方格 \(source = [s_x, s_y]\) 开始出发，意图赶往目标方格 \(target = [t_x, t_y]\) 。数组 &lt;code>blocked&lt;/code> 是封锁的方格列表，其中每个 \(blocked[i] = [x_i, y_i]\) 表示坐标为 \((x_i, y_i)\) 的方格是禁止通行的。&lt;/p>
&lt;p>每次移动，都可以走到网格中在四个方向上相邻的方格，只要该方格 &lt;strong>不&lt;/strong> 在给出的封锁列表 &lt;code>blocked&lt;/code> 上。同时，不允许走出网格。&lt;/p>
&lt;p>只有在可以通过一系列的移动从源方格 &lt;code>source&lt;/code> 到达目标方格 &lt;code>target&lt;/code> 时才返回 &lt;code>true&lt;/code>。否则，返回 &lt;code>false&lt;/code>。&lt;/p></description></item><item><title>AcWing 2019. 拖拉机</title><link>https://tategotoazarasi.github.io/post/acwing2019/</link><pubDate>Wed, 05 Jan 2022 10:59:26 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2019/</guid><description>&lt;p>干了一整天的活，农夫约翰完全忘记了他把拖拉机落在田地中央了。&lt;/p>
&lt;p>他的奶牛非常调皮，决定对约翰来场恶作剧。&lt;/p>
&lt;p>她们在田地的不同地方放了 N 捆干草，这样一来，约翰想要开走拖拉机就必须先移除一些干草捆。拖拉机的位置以及 N 捆干草的位置都是二维平面上的整数坐标点。&lt;/p>
&lt;p>拖拉机的初始位置上没有干草捆。&lt;/p>
&lt;p>当约翰驾驶拖拉机时，他只能沿平行于坐标轴的方向（北，南，东和西）移动拖拉机，并且拖拉机必须每次移动整数距离。&lt;/p>
&lt;p>例如，驾驶拖拉机先向北移动 2 单位长度，然后向东移动 3 单位长度。&lt;/p>
&lt;p>拖拉机无法移动到干草捆占据的位置。&lt;/p>
&lt;p>请帮助约翰确定他需要移除的干草捆的最小数量，以便他能够将拖拉机开到二维平面的原点。&lt;/p></description></item><item><title>LeetCode 913. 猫和老鼠</title><link>https://tategotoazarasi.github.io/post/cat-and-mouse/</link><pubDate>Tue, 04 Jan 2022 22:08:53 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/cat-and-mouse/</guid><description>&lt;p>两位玩家分别扮演猫和老鼠，在一张 &lt;strong>无向&lt;/strong> 图上进行游戏，两人轮流行动。&lt;/p>
&lt;p>图的形式是：&lt;code>graph[a]&lt;/code> 是一个列表，由满足 &lt;code>ab&lt;/code> 是图中的一条边的所有节点 &lt;code>b&lt;/code> 组成。&lt;/p>
&lt;p>老鼠从节点 &lt;code>1&lt;/code> 开始，第一个出发；猫从节点 &lt;code>2&lt;/code> 开始，第二个出发。在节点 &lt;code>0&lt;/code> 处有一个洞。&lt;/p>
&lt;p>在每个玩家的行动中，他们 &lt;strong>必须&lt;/strong> 沿着图中与所在当前位置连通的一条边移动。例如，如果老鼠在节点 &lt;code>1&lt;/code> ，那么它必须移动到 &lt;code>graph[1]&lt;/code> 中的任一节点。&lt;/p>
&lt;p>此外，猫无法移动到洞中（节点 &lt;code>0&lt;/code>）。&lt;/p>
&lt;p>然后，游戏在出现以下三种情形之一时结束：&lt;/p>
&lt;ul>
&lt;li>如果猫和老鼠出现在同一个节点，猫获胜。&lt;/li>
&lt;li>如果老鼠到达洞中，老鼠获胜。&lt;/li>
&lt;li>如果某一位置重复出现（即，玩家的位置和移动顺序都与上一次行动相同），游戏平局。&lt;/li>
&lt;/ul>
&lt;p>给你一张图 &lt;code>graph&lt;/code> ，并假设两位玩家都都以最佳状态参与游戏：&lt;/p>
&lt;ul>
&lt;li>如果老鼠获胜，则返回 &lt;code>1&lt;/code>；&lt;/li>
&lt;li>如果猫获胜，则返回 &lt;code>2&lt;/code>；&lt;/li>
&lt;li>如果平局，则返回 &lt;code>0&lt;/code> 。&lt;/li>
&lt;/ul></description></item><item><title>AcWing 2060. 奶牛选美</title><link>https://tategotoazarasi.github.io/post/acwing2060/</link><pubDate>Tue, 04 Jan 2022 21:57:38 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing2060/</guid><description>&lt;p>听说最近两斑点的奶牛最受欢迎，约翰立即购进了一批两斑点牛。&lt;/p>
&lt;p>不幸的是，时尚潮流往往变化很快，当前最受欢迎的牛变成了一斑点牛。&lt;/p>
&lt;p>约翰希望通过给每头奶牛涂色，使得它们身上的两个斑点能够合为一个斑点，让它们能够更加时尚。&lt;/p></description></item></channel></rss>