<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>微内核 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E5%BE%AE%E5%86%85%E6%A0%B8/</link><description>Recent content in 微内核 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 21 Feb 2024 05:22:26 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E5%BE%AE%E5%86%85%E6%A0%B8/index.xml" rel="self" type="application/rss+xml"/><item><title>基于微内核的系统的性能</title><link>https://tategotoazarasi.github.io/post/microkernel/</link><pubDate>Tue, 31 May 2022 20:09:56 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/microkernel/</guid><description>&lt;p>第一代微内核以速度太慢和缺乏足够的灵活性而闻名。为了确定第二代微内核 L4 是否克服了这些限制，我们重复了几个早期的实验，并进行了一些新的实验。此外，我们将 Linux 操作系统移植到 L4 微内核之上运行，并将生成的系统与原生的 Linux 和 MkLinux(在第一代 Mach 衍生的 μ 内核之上执行的 Linux 版本)进行比较。&lt;/p>
&lt;p>对于 L4Linux，AIM 基准测试报告的最大吞吐量仅比原生 Linux 低 5%。对于位于同一位置的内核版本的 MkLinux，相应的惩罚要高出 5 倍，而对于 MkLinux 的用户级版本，则是 7 倍。这些数字表明，在微内核之上实现高性能的传统操作系统是可能的，并且微内核的性能对于实现这一点至关重要。&lt;/p>
&lt;p>进一步的实验表明，所得到的系统是高度可扩展的，并且扩展后的系统表现良好。甚至包括二级缓存分配在内的实时内存管理也可以在用户级实现，与 L4Linux 共存。&lt;/p></description></item></channel></rss>