<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>拓扑排序 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</link><description>Recent content in 拓扑排序 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 19 Aug 2024 08:58:23 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 329. 矩阵中的最长递增路径</title><link>https://tategotoazarasi.github.io/post/longest-increasing-path-in-a-matrix/</link><pubDate>Mon, 19 Sep 2022 13:41:55 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/longest-increasing-path-in-a-matrix/</guid><description>&lt;p>给定一个  &lt;code>m x n&lt;/code> 整数矩阵  &lt;code>matrix&lt;/code> ，找出其中 &lt;strong>最长递增路径&lt;/strong> 的长度。&lt;/p>
&lt;p>对于每个单元格，你可以往上，下，左，右四个方向移动。 你 &lt;strong>不能&lt;/strong> 在 &lt;strong>对角线&lt;/strong> 方向上移动或移动到 &lt;strong>边界外&lt;/strong>（即不允许环绕）。&lt;/p></description></item><item><title>LeetCode 310. Minimum Height Trees</title><link>https://tategotoazarasi.github.io/post/minimum-height-trees/</link><pubDate>Wed, 06 Apr 2022 15:03:31 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/minimum-height-trees/</guid><description>&lt;p>A tree is an undirected graph in which any two vertices are connected by &lt;em>exactly&lt;/em> one path. In other words, any connected graph without simple cycles is a tree.&lt;/p>
&lt;p>Given a tree of &lt;code>n&lt;/code> nodes labelled from &lt;code>0&lt;/code> to &lt;code>n - 1&lt;/code>, and an array of &lt;code>n - 1&lt;/code> &lt;code>edges&lt;/code> where &lt;code>edges[i] = [ai, bi]&lt;/code> indicates that there is an undirected edge between the two nodes &lt;code>ai&lt;/code> and &lt;code>bi&lt;/code> in the tree, you can choose any node of the tree as the root. When you select a node &lt;code>x&lt;/code> as the root, the result tree has height &lt;code>h&lt;/code>. Among all possible rooted trees, those with minimum height (i.e. &lt;code>min(h)&lt;/code>)  are called &lt;strong>minimum height trees&lt;/strong> (MHTs).&lt;/p>
&lt;p>Return &lt;em>a list of all &lt;strong>MHTs&amp;rsquo;&lt;/strong> root labels&lt;/em>. You can return the answer in &lt;strong>any order&lt;/strong>.&lt;/p>
&lt;p>The &lt;strong>height&lt;/strong> of a rooted tree is the number of edges on the longest downward path between the root and a leaf.&lt;/p></description></item><item><title>LeetCode 1719. Number Of Ways To Reconstruct A Tree</title><link>https://tategotoazarasi.github.io/post/number-of-ways-to-reconstruct-a-tree/</link><pubDate>Wed, 16 Feb 2022 12:23:57 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/number-of-ways-to-reconstruct-a-tree/</guid><description>&lt;p>You are given an array &lt;code>pairs&lt;/code>, where \(pairs[i] = [x_i, y_i]\), and:&lt;/p>
&lt;ul>
&lt;li>There are no duplicates.&lt;/li>
&lt;li>\(x_i &amp;lt; y_i\)&lt;/li>
&lt;/ul>
&lt;p>Let &lt;code>ways&lt;/code> be the number of rooted trees that satisfy the following conditions:&lt;/p>
&lt;ul>
&lt;li>The tree consists of nodes whose values appeared in &lt;code>pairs&lt;/code>.&lt;/li>
&lt;li>A pair \([x_i, y_i]\) exists in &lt;code>pairs&lt;/code> &lt;strong>if and only if&lt;/strong> \(x_i\) is an ancestor of \(y_i\) or \(y_i\) is an ancestor of \(x_i\).&lt;/li>
&lt;li>&lt;strong>Note:&lt;/strong> the tree does not have to be a binary tree.&lt;/li>
&lt;/ul>
&lt;p>Two ways are considered to be different if there is at least one node that has different parents in both ways.&lt;/p>
&lt;p>Return:&lt;/p>
&lt;ul>
&lt;li>&lt;code>0&lt;/code> if &lt;code>ways == 0&lt;/code>&lt;/li>
&lt;li>&lt;code>1&lt;/code> if &lt;code>ways == 1&lt;/code>&lt;/li>
&lt;li>&lt;code>2&lt;/code> if &lt;code>ways &amp;gt; 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>A &lt;strong>rooted tree&lt;/strong> is a tree that has a single root node, and all edges are oriented to be outgoing from the root.&lt;/p>
&lt;p>An &lt;strong>ancestor&lt;/strong> of a node is any node on the path from the root to that node (excluding the node itself). The root has no ancestors.&lt;/p></description></item></channel></rss>