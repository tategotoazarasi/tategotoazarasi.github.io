<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>排序 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E6%8E%92%E5%BA%8F/</link><description>Recent content in 排序 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 01 Jan 2023 17:10:05 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 324. 摆动排序 II</title><link>https://tategotoazarasi.github.io/post/wiggle-sort-ii/</link><pubDate>Sun, 01 Jan 2023 17:10:05 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/wiggle-sort-ii/</guid><description>给你一个整数数组 nums，将它重新排列成 nums[0] &amp;lt; nums[1] &amp;gt; nums[2] &amp;lt; nums[3]... 的顺序。
你可以假设所有输入数组都可以得到满足题目要求的结果。
示例 1：
输入：nums = [1,5,1,1,6,4] 输出：[1,6,1,5,1,4] 解释：[1,4,1,5,1,6] 同样是符合题目要求的结果，可以被判题程序接受。 示例 2：
输入：nums = [1,3,2,2,3,1] 输出：[2,3,1,3,1,2] 提示：
\(1 &amp;lt;= nums.length &amp;lt;= 5 * 10^4 \) \(0 &amp;lt;= nums[i] &amp;lt;= 5000\) 题目数据保证，对于给定的输入 nums ，总能产生满足题目要求的结果 进阶： 你能用 O(n) 时间复杂度和 / 或原地 O(1) 额外空间来实现吗？
题解 方法一：排序 思路与算法 此题为「280. 摆动排序」的扩展题目，不同之处在于本题要求排序后的相邻的元素有严格的大小关系，满足 \(\textit{nums}[0] &amp;lt; \textit{nums}[1] &amp;gt; \textit{nums}[2] &amp;lt; \textit{nums}[3] \cdots\)。首先想到的解法即为排序，然后找到满足相邻的严格大小的关系。需要观察一下什么样的数组才能满足题目的要求，可以完成最终的摆动排序。假设数组中元素的数目为 \(n\)，则此时我们可以得到结论数组中相同元素的数目最多不超过 \(\left\lfloor \dfrac{n + 1}{2} \right\rfloor\)，我们可以用反证法来证明。当相同的元素的数目大于 \(\left\lfloor \dfrac{n + 1}{2} \right\rfloor\)，此时无论如何摆放都会有相同的元素相邻，必然导致摆动排序无法完成。将数组按照从小到大进行排序后，令 \(x = \left\lfloor \dfrac{n + 1}{2} \right\rfloor\)，此时根据前面的推论可以推测 \(\textit{nums}[i] \neq \textit{nums}[i+x]\)，则一定满足 \(\textit{nums}[i] &amp;lt; \textit{nums}[i+x]\)，因此我们可以得到：</description></item><item><title>LeetCode 452. 用最少数量的箭引爆气球</title><link>https://tategotoazarasi.github.io/post/minimum-number-of-arrows-to-burst-balloons/</link><pubDate>Fri, 02 Dec 2022 15:26:34 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/minimum-number-of-arrows-to-burst-balloons/</guid><description>&lt;p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组  &lt;code>points&lt;/code> ，其中 \(points[i] = [x_{start}, x_{end}]\)  表示水平直径在  \(x*{start}\)  和 \(x*{end}\)之间的气球。你不知道气球的确切 y 坐标。&lt;/p>
&lt;p>一支弓箭可以沿着 x 轴从不同点 &lt;strong>完全垂直&lt;/strong> 地射出。在坐标 &lt;code>x&lt;/code>处射出一支箭，若有一个气球的直径的开始和结束坐标为 \(x*{start}\)，\(x*{end}\)， 且满足  \(x*{start} ≤ x ≤ x*{end}\)，则该气球会被&lt;strong>引爆&lt;/strong>。可以射出的弓箭的数量 &lt;strong>没有限制&lt;/strong> 。弓箭一旦被射出之后，可以无限地前进。&lt;/p>
&lt;p>给你一个数组 &lt;code>points&lt;/code> ，返回引爆所有气球所必须射出的 &lt;strong>最小&lt;/strong>弓箭数。&lt;/p></description></item><item><title>LeetCode 435. Non-overlapping Intervals</title><link>https://tategotoazarasi.github.io/post/non-overlapping-intervals/</link><pubDate>Sun, 26 Jun 2022 13:49:43 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/non-overlapping-intervals/</guid><description>&lt;p>Given an array of intervals &lt;code>intervals&lt;/code> where \(intervals[i] = [start_i, end_i]\), return &lt;em>the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping&lt;/em>.&lt;/p></description></item><item><title>LeetCode 1996. 游戏中弱角色的数量</title><link>https://tategotoazarasi.github.io/post/the-number-of-weak-characters-in-the-game/</link><pubDate>Fri, 28 Jan 2022 10:27:51 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/the-number-of-weak-characters-in-the-game/</guid><description>&lt;p>你正在参加一个多角色游戏，每个角色都有两个主要属性：&lt;strong>攻击&lt;/strong> 和 &lt;strong>防御&lt;/strong> 。给你一个二维整数数组 &lt;code>properties&lt;/code> ，其中 \(properties[i] = [attack_i, defense_i]\) 表示游戏中第 &lt;code>i&lt;/code> 个角色的属性。&lt;/p>
&lt;p>如果存在一个其他角色的攻击和防御等级 &lt;strong>都严格高于&lt;/strong> 该角色的攻击和防御等级，则认为该角色为 &lt;strong>弱角色&lt;/strong> 。更正式地，如果认为角色 &lt;code>i&lt;/code> &lt;strong>弱于&lt;/strong> 存在的另一个角色 &lt;code>j&lt;/code> ，那么 \(attack_j &amp;gt; attack_i\) 且 \(defense_j &amp;gt; defense_i\) 。&lt;/p>
&lt;p>返回 &lt;strong>弱角色&lt;/strong> 的数量。&lt;/p></description></item><item><title>AcWing 1978. 奶牛过马路</title><link>https://tategotoazarasi.github.io/post/acwing1978/</link><pubDate>Tue, 11 Jan 2022 16:08:30 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1978/</guid><description>&lt;p>每天，农夫约翰的 N 头奶牛都会穿过农场中间的马路。&lt;/p>
&lt;p>考虑约翰的农场在二维平面的地图，马路沿水平方向延伸，马路的一侧由直线 y=0 描述，另一侧由直线 y=1 描述。&lt;/p>
&lt;p>奶牛 i 从马路一侧的位置 \((a_i,0)\) 沿直线过马路到达另一侧的位置 \((b_i,1)\)。&lt;/p>
&lt;p>所有 \(a_i\) 互不相同，所有 \(b_i\) 互不相同。&lt;/p>
&lt;p>尽管他的奶牛们行动敏捷，他还是担心行动路径交叉的两头奶牛在过马路时发生碰撞。&lt;/p>
&lt;p>约翰认为，如果一头奶牛的行动路径没有跟其他任何奶牛的行动路径相交，则该奶牛是安全的。&lt;/p>
&lt;p>请帮助约翰计算安全奶牛的数量。&lt;/p></description></item></channel></rss>