<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>虚拟机 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><description>Recent content in 虚拟机 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 23 Mar 2024 07:12:59 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>Dune：对特权 CPU 功能的安全用户级访问</title><link>https://tategotoazarasi.github.io/post/belay-dune/</link><pubDate>Sat, 04 Jun 2022 18:14:18 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/belay-dune/</guid><description>Dune 是一个系统，它为应用程序提供对硬件功能(如环保护、页表和标记 TLB)的直接但安全的访问，同时保留了现有的操作系统的进程接口。Dune 使用现代处理器中的虚拟化硬件来管理一个进程，而不是虚拟机。它由一个小型内核模块和一个用户级库组成，前者用于初始化虚拟化硬件并协调与内核的交互，后者用于帮助应用程序管理特权硬件功能。我们介绍了 64 位 x86 Linux 的 Dune 的实现。我们用 Dune 实现了三个用户级应用，它们可以从访问特权硬件中受益：一个用于不受信任的代码的沙盒、一个特权分离工具和垃圾收集器。Dune 的使用极大地简化了这些应用程序的实现，并提供了显著的性能优势。</description></item></channel></rss>