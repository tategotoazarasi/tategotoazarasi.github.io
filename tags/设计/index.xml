<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>设计 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 设计 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 28 Feb 2024 08:30:25 +0000</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 715. Range 模块</title><link>https://tategotoazarasi.github.io/post/range-module/</link><pubDate>Mon, 19 Sep 2022 21:11:46 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/range-module/</guid><description>&lt;p>Range 模块是跟踪数字范围的模块。设计一个数据结构来跟踪表示为 &lt;strong>半开区间&lt;/strong>的范围并查询它们。&lt;/p>
&lt;p>&lt;strong>半开区间&lt;/strong> &lt;code>[left, right)&lt;/code>  表示所有  &lt;code>left &amp;lt;= x &amp;lt; right&lt;/code>  的实数 &lt;code>x&lt;/code> 。&lt;/p>
&lt;p>实现 &lt;code>RangeModule&lt;/code> 类:&lt;/p>
&lt;ul>
&lt;li>&lt;code>RangeModule()&lt;/code>  初始化数据结构的对象。&lt;/li>
&lt;li>&lt;code>void addRange(int left, int right)&lt;/code> 添加 &lt;strong>半开区间&lt;/strong> &lt;code>[left, right)&lt;/code>，跟踪该区间中的每个实数。添加与当前跟踪的数字部分重叠的区间时，应当添加在区间  &lt;code>[left, right)&lt;/code>  中尚未跟踪的任何数字到该区间中。&lt;/li>
&lt;li>&lt;code>boolean queryRange(int left, int right)&lt;/code>  只有在当前正在跟踪区间  &lt;code>[left, right)&lt;/code>  中的每一个实数时，才返回&lt;code>true&lt;/code> ，否则返回 &lt;code>false&lt;/code> 。&lt;/li>
&lt;li>&lt;code>void removeRange(int left, int right)&lt;/code>  停止跟踪
&lt;strong>半开区间&lt;/strong> &lt;code>[left, right)&lt;/code>  中当前正在跟踪的每个实数。&lt;/li>
&lt;/ul></description></item><item><title>LeetCode 380. Insert Delete GetRandom O(1)</title><link>https://tategotoazarasi.github.io/post/insert-delete-getrandom-o1/</link><pubDate>Wed, 13 Apr 2022 15:22:28 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/insert-delete-getrandom-o1/</guid><description>&lt;p>实现&lt;code>RandomizedSet&lt;/code> 类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>RandomizedSet()&lt;/code> 初始化 &lt;code>RandomizedSet&lt;/code> 对象&lt;/li>
&lt;li>&lt;code>bool insert(int val)&lt;/code> 当元素 &lt;code>val&lt;/code> 不存在时，向集合中插入该项，并返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code> 。&lt;/li>
&lt;li>&lt;code>bool remove(int val)&lt;/code> 当元素 &lt;code>val&lt;/code> 存在时，从集合中移除该项，并返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code> 。&lt;/li>
&lt;li>&lt;code>int getRandom()&lt;/code> 随机返回现有集合中的一项（测试用例保证调用此方法时集合中至少存在一个元素）。每个元素应该有 &lt;strong>相同的概率&lt;/strong> 被返回。&lt;/li>
&lt;/ul>
&lt;p>你必须实现类的所有函数，并满足每个函数的 &lt;strong>平均&lt;/strong> 时间复杂度为 &lt;code>O(1)&lt;/code> 。&lt;/p></description></item><item><title>LeetCode 307. Range Sum Query - Mutable</title><link>https://tategotoazarasi.github.io/post/range-sum-query-mutable/</link><pubDate>Mon, 04 Apr 2022 12:46:58 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/range-sum-query-mutable/</guid><description>&lt;p>Given an integer array &lt;code>nums&lt;/code>, handle multiple queries of the following types:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Update&lt;/strong> the value of an element in &lt;code>nums&lt;/code>.&lt;/li>
&lt;li>Calculate the &lt;strong>sum&lt;/strong> of the elements of &lt;code>nums&lt;/code> between indices &lt;code>left&lt;/code> and &lt;code>right&lt;/code> &lt;strong>inclusive&lt;/strong> where &lt;code>left &amp;lt;= right&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>Implement the &lt;code>NumArray&lt;/code> class:&lt;/p>
&lt;ul>
&lt;li>&lt;code>NumArray(int[] nums)&lt;/code> Initializes the object with the integer array &lt;code>nums&lt;/code>.&lt;/li>
&lt;li>&lt;code>void update(int index, int val)&lt;/code> &lt;strong>Updates&lt;/strong> the value of &lt;code>nums[index]&lt;/code> to be &lt;code>val&lt;/code>.&lt;/li>
&lt;li>&lt;code>int sumRange(int left, int right)&lt;/code> Returns the &lt;strong>sum&lt;/strong> of the elements of &lt;code>nums&lt;/code> between indices &lt;code>left&lt;/code> and &lt;code>right&lt;/code> &lt;strong>inclusive&lt;/strong> (i.e. &lt;code>nums[left] + nums[left + 1] + ... + nums[right]&lt;/code>).&lt;/li>
&lt;/ul></description></item></channel></rss>