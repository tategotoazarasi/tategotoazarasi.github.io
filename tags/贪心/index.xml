<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>贪心 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E8%B4%AA%E5%BF%83/</link><description>Recent content in 贪心 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 02 Dec 2022 15:26:34 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E8%B4%AA%E5%BF%83/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 452. 用最少数量的箭引爆气球</title><link>https://tategotoazarasi.github.io/post/minimum-number-of-arrows-to-burst-balloons/</link><pubDate>Fri, 02 Dec 2022 15:26:34 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/minimum-number-of-arrows-to-burst-balloons/</guid><description>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中 \(points[i] = [x_{start}, x_{end}]\) 表示水平直径在 \(x*{start}\) 和 \(x*{end}\)之间的气球。你不知道气球的确切 y 坐标。
一支弓箭可以沿着 x 轴从不同点 完全垂直 地射出。在坐标 x处射出一支箭，若有一个气球的直径的开始和结束坐标为 \(x*{start}\)，\(x*{end}\)， 且满足 \(x*{start} ≤ x ≤ x*{end}\)，则该气球会被引爆。可以射出的弓箭的数量 没有限制 。弓箭一旦被射出之后，可以无限地前进。
给你一个数组 points ，返回引爆所有气球所必须射出的 最小弓箭数。
示例 1：
输入：points = [[10,16],[2,8],[1,6],[7,12]] 输出：2 解释：气球可以用2支箭来爆破: -在x = 6处射出箭，击破气球[2,8]和[1,6]。 -在x = 11处发射箭，击破气球[10,16]和[7,12]。 示例 2：
输入：points = [[1,2],[3,4],[5,6],[7,8]] 输出：4 解释：每个气球需要射出一支箭，总共需要4支箭。 示例 3：
输入：points = [[1,2],[2,3],[3,4],[4,5]] 输出：2 解释：气球可以用2支箭来爆破: - 在x = 2处发射箭，击破气球[1,2]和[2,3]。 - 在x = 4处射出箭，击破气球[3,4]和[4,5]。 提示:</description></item><item><title>LeetCode 435. Non-overlapping Intervals</title><link>https://tategotoazarasi.github.io/post/non-overlapping-intervals/</link><pubDate>Sun, 26 Jun 2022 13:49:43 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/non-overlapping-intervals/</guid><description>&lt;p>Given an array of intervals &lt;code>intervals&lt;/code> where \(intervals[i] = [start_i, end_i]\), return &lt;em>the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping&lt;/em>.&lt;/p></description></item><item><title>LeetCode 11. Container With Most Water</title><link>https://tategotoazarasi.github.io/post/container-with-most-water/</link><pubDate>Sun, 29 May 2022 14:00:35 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/container-with-most-water/</guid><description>&lt;p>You are given an integer array &lt;code>height&lt;/code> of length &lt;code>n&lt;/code>. There are &lt;code>n&lt;/code>
vertical lines drawn such that the two endpoints of the &lt;code>ith&lt;/code> line are
&lt;code>(i, 0)&lt;/code> and &lt;code>(i, height[i])&lt;/code>.&lt;/p>
&lt;p>Find two lines that together with the x-axis form a container, such that
the container contains the most water.&lt;/p>
&lt;p>Return &lt;em>the maximum amount of water a container can store&lt;/em>.&lt;/p></description></item><item><title>LeetCode 6040. Maximum Total Beauty of the Gardens</title><link>https://tategotoazarasi.github.io/post/maximum-total-beauty-of-the-gardens/</link><pubDate>Sun, 10 Apr 2022 12:20:00 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/maximum-total-beauty-of-the-gardens/</guid><description>&lt;p>Alice is a caretaker of &lt;code>n&lt;/code> gardens and she wants to plant flowers to maximize the total beauty of all her gardens.&lt;/p>
&lt;p>You are given a &lt;strong>0-indexed&lt;/strong> integer array &lt;code>flowers&lt;/code> of size &lt;code>n&lt;/code>, where &lt;code>flowers[i]&lt;/code> is the number of flowers already planted in the &lt;code>ith&lt;/code> garden. Flowers that are already planted &lt;strong>cannot&lt;/strong> be removed. You are then given another integer &lt;code>newFlowers&lt;/code>, which is the &lt;strong>maximum&lt;/strong> number of flowers that Alice can additionally plant. You are also given the integers &lt;code>target&lt;/code>, &lt;code>full&lt;/code>, and &lt;code>partial&lt;/code>.&lt;/p>
&lt;p>A garden is considered &lt;strong>complete&lt;/strong> if it has &lt;strong>at least&lt;/strong> &lt;code>target&lt;/code> flowers. The &lt;strong>total beauty&lt;/strong> of the gardens is then determined as the &lt;strong>sum&lt;/strong> of the following:&lt;/p>
&lt;ul>
&lt;li>The number of &lt;strong>complete&lt;/strong> gardens multiplied by &lt;code>full&lt;/code>.&lt;/li>
&lt;li>The &lt;strong>minimum&lt;/strong> number of flowers in any of the &lt;strong>incomplete&lt;/strong> gardens multiplied by &lt;code>partial&lt;/code>. If there are no incomplete gardens, then this value will be &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Return &lt;em>the &lt;strong>maximum&lt;/strong> total beauty that Alice can obtain after planting at most&lt;/em> &lt;code>newFlowers&lt;/code> &lt;em>flowers.&lt;/em>&lt;/p></description></item><item><title>LeetCode 420. Strong Password Checker</title><link>https://tategotoazarasi.github.io/post/strong-password-checker/</link><pubDate>Sat, 02 Apr 2022 13:21:16 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/strong-password-checker/</guid><description>&lt;p>A password is considered strong if the below conditions are all met:&lt;/p>
&lt;ul>
&lt;li>It has at least &lt;code>6&lt;/code> characters and at most &lt;code>20&lt;/code> characters.&lt;/li>
&lt;li>It contains at least &lt;strong>one lowercase&lt;/strong> letter, at least &lt;strong>one uppercase&lt;/strong> letter, and at least &lt;strong>one digit&lt;/strong>.&lt;/li>
&lt;li>It does not contain three repeating characters in a row (i.e., &lt;code>&amp;quot;...aaa...&amp;quot;&lt;/code> is weak, but &lt;code>&amp;quot;...aa...a...&amp;quot;&lt;/code> is strong, assuming other conditions are met).&lt;/li>
&lt;/ul>
&lt;p>Given a string &lt;code>password&lt;/code>, return &lt;em>the minimum number of steps required to make &lt;code>password&lt;/code> strong. if &lt;code>password&lt;/code> is already strong, return &lt;code>0&lt;/code>.&lt;/em>&lt;/p>
&lt;p>In one step, you can:&lt;/p>
&lt;ul>
&lt;li>Insert one character to &lt;code>password&lt;/code>,&lt;/li>
&lt;li>Delete one character from &lt;code>password&lt;/code>, or&lt;/li>
&lt;li>Replace one character of &lt;code>password&lt;/code> with another character.&lt;/li>
&lt;/ul></description></item><item><title>AcWing 3745. 牛的学术圈 I</title><link>https://tategotoazarasi.github.io/post/acwing3745/</link><pubDate>Thu, 17 Mar 2022 16:37:13 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing3745/</guid><description>&lt;p>由于对计算机科学的热爱，以及有朝一日成为 「Bessie 博士」的诱惑，奶牛 Bessie 开始攻读计算机科学博士学位。&lt;/p>
&lt;p>经过一段时间的学术研究，她已经发表了 N 篇论文，并且她的第 i 篇论文得到了来自其他研究文献的 ci 次引用。&lt;/p>
&lt;p>Bessie 听说学术成就可以用 h 指数来衡量。&lt;/p>
&lt;p>h 指数等于使得研究员有至少 h 篇引用次数不少于 h 的论文的最大整数 h。&lt;/p>
&lt;p>例如，如果一名研究员有 4 篇论文，引用次数分别为 (1,100,2,3)，则 h 指数为 2，然而若引用次数为 (1,100,3,3) 则 h 指数将会是 3。&lt;/p>
&lt;p>为了提升她的 h 指数，Bessie 计划写一篇综述，并引用一些她曾经写过的论文。&lt;/p>
&lt;p>由于页数限制，她至多可以在这篇综述中引用 L 篇论文，并且她只能引用每篇她的论文至多一次。&lt;/p>
&lt;p>请帮助 Bessie 求出在写完这篇综述后她可以达到的最大 h 指数。&lt;/p>
&lt;p>注意 Bessie 的导师可能会告知她纯粹为了提升 h 指数而写综述存在违反学术道德的嫌疑；我们不建议其他学者模仿 Bessie 的行为。&lt;/p></description></item><item><title>LeetCode 1414. 和为 K 的最少斐波那契数字数目</title><link>https://tategotoazarasi.github.io/post/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/</link><pubDate>Thu, 03 Feb 2022 20:03:54 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/</guid><description>&lt;p>给你数字 &lt;code>k&lt;/code> ，请你返回和为  &lt;code>k&lt;/code>  的斐波那契数字的最少数目，其中，每个斐波那契数字都可以被使用多次。&lt;/p>
&lt;p>斐波那契数字定义为：&lt;/p>
&lt;ul>
&lt;li>\(F_1 = 1\)&lt;/li>
&lt;li>\(F_2 = 1\)&lt;/li>
&lt;li>\(F_n = F_{n-1} + F_{n-2}\)， 其中 n &amp;gt; 2 。&lt;/li>
&lt;/ul>
&lt;p>数据保证对于给定的 &lt;code>k&lt;/code> ，一定能找到可行解。&lt;/p></description></item><item><title>LeetCode 1996. 游戏中弱角色的数量</title><link>https://tategotoazarasi.github.io/post/the-number-of-weak-characters-in-the-game/</link><pubDate>Fri, 28 Jan 2022 10:27:51 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/the-number-of-weak-characters-in-the-game/</guid><description>&lt;p>你正在参加一个多角色游戏，每个角色都有两个主要属性：&lt;strong>攻击&lt;/strong> 和 &lt;strong>防御&lt;/strong> 。给你一个二维整数数组 &lt;code>properties&lt;/code> ，其中 \(properties[i] = [attack_i, defense_i]\) 表示游戏中第 &lt;code>i&lt;/code> 个角色的属性。&lt;/p>
&lt;p>如果存在一个其他角色的攻击和防御等级 &lt;strong>都严格高于&lt;/strong> 该角色的攻击和防御等级，则认为该角色为 &lt;strong>弱角色&lt;/strong> 。更正式地，如果认为角色 &lt;code>i&lt;/code> &lt;strong>弱于&lt;/strong> 存在的另一个角色 &lt;code>j&lt;/code> ，那么 \(attack_j &amp;gt; attack_i\) 且 \(defense_j &amp;gt; defense_i\) 。&lt;/p>
&lt;p>返回 &lt;strong>弱角色&lt;/strong> 的数量。&lt;/p></description></item><item><title>AcWing 1996. 打乱字母</title><link>https://tategotoazarasi.github.io/post/acwing1996/</link><pubDate>Sun, 09 Jan 2022 18:39:18 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/acwing1996/</guid><description>&lt;p>农夫约翰将按字典序排列的 N 头奶牛的名字列表贴在了牛棚的门上。&lt;/p>
&lt;p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。&lt;/p>
&lt;p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。&lt;/p>
&lt;p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。&lt;/p>
&lt;p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。&lt;/p></description></item><item><title>LeetCode 5948. 判断一个括号字符串是否有效</title><link>https://tategotoazarasi.github.io/post/check-if-a-parentheses-string-can-be-valid/</link><pubDate>Sun, 26 Dec 2021 09:22:53 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/check-if-a-parentheses-string-can-be-valid/</guid><description>&lt;p>一个括号字符串是只由  &lt;code>'('&lt;/code> 和  &lt;code>')'&lt;/code>  组成的  &lt;strong>非空&lt;/strong>  字符串。如果一个字符串满足下面 &lt;strong>任意&lt;/strong>  一个条件，那么它就是有效的：&lt;/p>
&lt;ul>
&lt;li>字符串为  &lt;code>()&lt;/code>.&lt;/li>
&lt;li>它可以表示为 &lt;code>AB&lt;/code>（&lt;code>A&lt;/code>  与  &lt;code>B&lt;/code>  连接），其中&lt;code>A&lt;/code> 和  &lt;code>B&lt;/code>  都是有效括号字符串。&lt;/li>
&lt;li>它可以表示为  &lt;code>(A)&lt;/code> ，其中  &lt;code>A&lt;/code>  是一个有效括号字符串。&lt;/li>
&lt;/ul>
&lt;p>给你一个括号字符串  &lt;code>s&lt;/code>  和一个字符串  &lt;code>locked&lt;/code> ，两者长度都为  &lt;code>n&lt;/code> 。&lt;code>locked&lt;/code>  是一个二进制字符串，只包含  &lt;code>'0'&lt;/code>  和  &lt;code>'1'&lt;/code> 。对于  &lt;code>locked&lt;/code>  中  &lt;strong>每一个&lt;/strong>  下标  &lt;code>i&lt;/code> ：&lt;/p>
&lt;ul>
&lt;li>如果  &lt;code>locked[i]&lt;/code>  是  &lt;code>'1'&lt;/code> ，你 &lt;strong>不能&lt;/strong>  改变  &lt;code>s[i]&lt;/code> 。&lt;/li>
&lt;li>如果  &lt;code>locked[i]&lt;/code>  是  &lt;code>'0'&lt;/code> ，你  &lt;strong>可以&lt;/strong>  将  &lt;code>s[i]&lt;/code>  变为  &lt;code>'('&lt;/code>  或者  &lt;code>')'&lt;/code> 。&lt;/li>
&lt;/ul>
&lt;p>如果你可以将 &lt;code>s&lt;/code>  变为有效括号字符串，请你返回  &lt;code>true&lt;/code> ，否则返回  &lt;code>false&lt;/code> 。&lt;/p></description></item></channel></rss>