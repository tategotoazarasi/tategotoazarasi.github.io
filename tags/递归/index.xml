<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>递归 on Harp Seal Pup Nursery and Caring Center</title><link>https://tategotoazarasi.github.io/tags/%E9%80%92%E5%BD%92/</link><description>Recent content in 递归 on Harp Seal Pup Nursery and Caring Center</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 06 Dec 2021 08:53:47 +0800</lastBuildDate><atom:link href="https://tategotoazarasi.github.io/tags/%E9%80%92%E5%BD%92/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode 21. 合并两个有序链表</title><link>https://tategotoazarasi.github.io/post/merge-two-sorted-lists/</link><pubDate>Mon, 06 Dec 2021 08:53:47 +0800</pubDate><guid>https://tategotoazarasi.github.io/post/merge-two-sorted-lists/</guid><description>将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 示例 1：
输入： l1 = [1,2,4], l2 = [1,3,4]
输出： [1,1,2,3,4,4]
示例 2：
输入： l1 = [], l2 = []
输出： []
示例 3：
输入： l1 = [], l2 = [0]
输出： [0]
提示：
两个链表的节点数目范围是 [0, 50] -100 &amp;lt;= Node.val &amp;lt;= 100 l1 和 l2 均按 非递减顺序 排列 /** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode() {} * ListNode(int val) { this.</description></item></channel></rss>