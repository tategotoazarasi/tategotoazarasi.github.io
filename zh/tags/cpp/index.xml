<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cpp on Tategoto Azarasi</title>
    <link>https://tategotoazarasi.github.io/zh/tags/cpp/</link>
    <description>Recent content in Cpp on Tategoto Azarasi</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 06 Apr 2025 19:32:52 +0800</lastBuildDate>
    <atom:link href="https://tategotoazarasi.github.io/zh/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 EnTT 在 C&#43;&#43; Host 与 Rust WASM 插件间实现灵活的关系管理</title>
      <link>https://tategotoazarasi.github.io/zh/posts/bridging-the-gap-flexible-relationship-management-between-cpp-host-and-rust-wasm-plugins-using-entt/</link>
      <pubDate>Sun, 06 Apr 2025 19:32:52 +0800</pubDate>
      <guid>https://tategotoazarasi.github.io/zh/posts/bridging-the-gap-flexible-relationship-management-between-cpp-host-and-rust-wasm-plugins-using-entt/</guid>
      <description>使用 Wasmtime 和稳定 C FFI，在 C++ Host 中通过 EnTT 管理实体关系，并允许 Rust WebAssembly (WASM) 插件安全交互，利用数据驱动设计克服 WASM 边界限制。</description>
    </item>
    <item>
      <title>深入探索 Wasmtime：C&#43;&#43; 与 Rust Wasm 模块的双向通信与内存共享</title>
      <link>https://tategotoazarasi.github.io/zh/posts/deep-dive-into-wasmtime-bidirectional-communication-and-memory-sharing-between-cpp-and-rust-wasm-modules/</link>
      <pubDate>Sun, 06 Apr 2025 16:34:33 +0800</pubDate>
      <guid>https://tategotoazarasi.github.io/zh/posts/deep-dive-into-wasmtime-bidirectional-communication-and-memory-sharing-between-cpp-and-rust-wasm-modules/</guid>
      <description>一篇详细的技术指南，介绍如何使用 Wasmtime 运行时在 C++ 宿主应用程序与 Rust WebAssembly 模块之间实现复杂的双向通信、共享内存访问和结构体传递。</description>
    </item>
  </channel>
</rss>
